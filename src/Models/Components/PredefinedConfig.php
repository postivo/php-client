<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Postivo\Models\Components;


/** PredefinedConfig - Predefined configuration usable for dispatching shipments (referenced via `predefined_config_id`). */
class PredefinedConfig
{
    /**
     * Unique predefined configuration ID.
     *
     * @var ?int $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?int $id = null;

    /**
     * Predefined configuration name.
     *
     * @var ?string $name
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $name = null;

    /**
     * Paper type name.
     *
     * @var ?string $paperName
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('paper_name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $paperName = null;

    /**
     * Print documents in color (`true`) or grayscale (`false`).
     *
     * @var ?bool $colorPrint
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('color_print')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $colorPrint = null;

    /**
     * Print documents duplex (`true`) or single-sided (`false`).
     *
     * @var ?bool $duplexPrint
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('duplex_print')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $duplexPrint = null;

    /**
     * Preferred envelope type name.
     *
     * @var ?string $envelopeName
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('envelope_name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $envelopeName = null;

    /**
     * Preferred envelope size.
     *
     * @var ?string $envelopeSize
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('envelope_size')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $envelopeSize = null;

    /**
     * Envelope group name.
     *
     * @var ?string $envelopeGroupName
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('envelope_group_name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $envelopeGroupName = null;

    /**
     * Print the envelope in color (`true`) or grayscale (`false`).
     *
     * @var ?bool $envelopeColorPrint
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('envelope_color_print')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $envelopeColorPrint = null;

    /**
     * @param  ?int  $id
     * @param  ?string  $name
     * @param  ?string  $paperName
     * @param  ?bool  $colorPrint
     * @param  ?bool  $duplexPrint
     * @param  ?string  $envelopeName
     * @param  ?string  $envelopeSize
     * @param  ?string  $envelopeGroupName
     * @param  ?bool  $envelopeColorPrint
     * @phpstan-pure
     */
    public function __construct(?int $id = null, ?string $name = null, ?string $paperName = null, ?bool $colorPrint = null, ?bool $duplexPrint = null, ?string $envelopeName = null, ?string $envelopeSize = null, ?string $envelopeGroupName = null, ?bool $envelopeColorPrint = null)
    {
        $this->id = $id;
        $this->name = $name;
        $this->paperName = $paperName;
        $this->colorPrint = $colorPrint;
        $this->duplexPrint = $duplexPrint;
        $this->envelopeName = $envelopeName;
        $this->envelopeSize = $envelopeSize;
        $this->envelopeGroupName = $envelopeGroupName;
        $this->envelopeColorPrint = $envelopeColorPrint;
    }
}