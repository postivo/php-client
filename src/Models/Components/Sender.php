<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Postivo\Models\Components;


/** Sender - Sender data for the shipment. */
class Sender
{
    /**
     * Sender name (person or company) â€” line 1.
     *
     * @var ?string $name
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('name')]
    public ?string $name;

    /**
     * Street address of the sender.
     *
     * @var ?string $address
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('address')]
    public ?string $address;

    /**
     * Postal code. For `PL`, 5-digit values are normalized to the `NN-NNN` format.
     *
     * @var ?string $postCode
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('post_code')]
    public ?string $postCode;

    /**
     * City of the sender.
     *
     * @var ?string $city
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('city')]
    public ?string $city;

    /**
     * Sender name (person or company) â€” line 2.
     *
     * @var ?string $name2
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('name2')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $name2 = null;

    /**
     * Building number of the sender.
     *
     * @var ?string $homeNumber
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('home_number')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $homeNumber = null;

    /**
     * Apartment (unit) number of the sender.
     *
     * @var ?string $flatNumber
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('flat_number')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $flatNumber = null;

    /**
     * Country code in ISO 3166-1 alpha-2 format. Value is automatically uppercased. Full list: https://www.iso.org/iso-3166-country-codes.html
     *
     * @var ?string $country
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('country')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $country = null;

    /**
     * @param  ?string  $name
     * @param  ?string  $address
     * @param  ?string  $postCode
     * @param  ?string  $city
     * @param  ?string  $name2
     * @param  ?string  $homeNumber
     * @param  ?string  $flatNumber
     * @param  ?string  $country
     * @phpstan-pure
     */
    public function __construct(?string $name = null, ?string $address = null, ?string $postCode = null, ?string $city = null, ?string $name2 = null, ?string $homeNumber = null, ?string $flatNumber = null, ?string $country = null)
    {
        $this->name = $name;
        $this->address = $address;
        $this->postCode = $postCode;
        $this->city = $city;
        $this->name2 = $name2;
        $this->homeNumber = $homeNumber;
        $this->flatNumber = $flatNumber;
        $this->country = $country;
    }
}